-- MySQL Script generated by MySQL Workbench
-- Tue Dec 22 17:20:14 2020
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema mydb
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema mydb
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `mydb` DEFAULT CHARACTER SET utf8 ;
USE `mydb` ;

-- -----------------------------------------------------
-- Table `mydb`.`projekt_klienci`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`projekt_klienci` (
  `id_klienta` INT NOT NULL AUTO_INCREMENT,
  `imie` VARCHAR(100) NOT NULL,
  `nazwisko` VARCHAR(100) NOT NULL,
  `adres` VARCHAR(100) NOT NULL,
  `miejscowosc` VARCHAR(100) NOT NULL,
  `kod_pocztowy` VARCHAR(6) NOT NULL,
  `telefon_kontaktowy` INT(9) UNSIGNED NULL,
  PRIMARY KEY (`id_klienta`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`projekt_dzialy`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`projekt_dzialy` (
  `id_dzialu` INT NOT NULL AUTO_INCREMENT,
  `nazwa_dzialu` VARCHAR(100) NOT NULL,
  PRIMARY KEY (`id_dzialu`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`projekt_pracownicy`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`projekt_pracownicy` (
  `id_pracownika` INT NOT NULL,
  `imie` VARCHAR(100) NOT NULL,
  `nazwisko` VARCHAR(100) NOT NULL,
  `dzial` INT NOT NULL,
  `pensja` DOUBLE(10,2) UNSIGNED NOT NULL,
  `data_urodzenia` DATE NOT NULL,
  `data_zatrudnienia` DATE NOT NULL,
  PRIMARY KEY (`id_pracownika`),
  INDEX `fk_pracownicy_dzialy_idx` (`dzial` ASC) VISIBLE,
  CONSTRAINT `fk_pracownicy_dzialy`
    FOREIGN KEY (`dzial`)
    REFERENCES `mydb`.`projekt_dzialy` (`id_dzialu`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`projekt_produkty`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`projekt_produkty` (
  `id_produktu` INT NOT NULL AUTO_INCREMENT,
  `typ` ENUM("Karta graficzna", "Procesor", "Pamieć RAM", "Zasialcz", "Dysk", "Obudowa", "Płyta główna") NOT NULL,
  `producent` VARCHAR(200) NOT NULL,
  `nazwa` VARCHAR(200) NOT NULL,
  `cena` DOUBLE(7,2) UNSIGNED NOT NULL,
  `okres_gwarancji` VARCHAR(100) NULL,
  PRIMARY KEY (`id_produktu`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`projekt_uslugi`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`projekt_uslugi` (
  `id_uslugi` INT NOT NULL AUTO_INCREMENT,
  `nazwa_uslugi` VARCHAR(200) NOT NULL,
  `cena` DOUBLE(7,2) NOT NULL,
  PRIMARY KEY (`id_uslugi`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`projekt_statusy_zamowien`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`projekt_statusy_zamowien` (
  `id_statusu` INT NOT NULL AUTO_INCREMENT,
  `nazwa_statusu_zamowienia` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`id_statusu`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`projekt_zamowienia`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`projekt_zamowienia` (
  `id_zamowienia` INT NOT NULL AUTO_INCREMENT,
  `id_kupujacego` INT NOT NULL,
  `data_zlozenia_zamowienia` DATE NOT NULL,
  `id_statusu` INT NOT NULL,
  `id_uslugi` INT NOT NULL,
  `id_produktu` INT NULL,
  `id_pracownika` INT NOT NULL,
  PRIMARY KEY (`id_zamowienia`),
  INDEX `fk_zamowienia_produkty1_idx` (`id_produktu` ASC) VISIBLE,
  INDEX `fk_zamowienia_usługi1_idx` (`id_uslugi` ASC) VISIBLE,
  INDEX `fk_zamowienia_klienci1_idx` (`id_kupujacego` ASC) VISIBLE,
  INDEX `fk_zamowienia_pracownicy1_idx` (`id_pracownika` ASC) VISIBLE,
  INDEX `fk_zamowienia_statusy_zamowien1_idx` (`id_statusu` ASC) VISIBLE,
  CONSTRAINT `fk_zamowienia_produkty1`
    FOREIGN KEY (`id_produktu`)
    REFERENCES `mydb`.`projekt_produkty` (`id_produktu`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_zamowienia_usługi1`
    FOREIGN KEY (`id_uslugi`)
    REFERENCES `mydb`.`projekt_uslugi` (`id_uslugi`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_zamowienia_klienci1`
    FOREIGN KEY (`id_kupujacego`)
    REFERENCES `mydb`.`projekt_klienci` (`id_klienta`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_zamowienia_pracownicy1`
    FOREIGN KEY (`id_pracownika`)
    REFERENCES `mydb`.`projekt_pracownicy` (`id_pracownika`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_zamowienia_statusy_zamowien1`
    FOREIGN KEY (`id_statusu`)
    REFERENCES `mydb`.`projekt_statusy_zamowien` (`id_statusu`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`projekt_historia_zamowien`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`projekt_historia_zamowien` (
  `id_histori_zamowienia` INT NOT NULL,
  `id_klienta` INT NOT NULL,
  `id_zamowienia` INT NOT NULL,
  `status_zamowienia` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`id_histori_zamowienia`),
  INDEX `fk_historia_zamowien_klienci1_idx` (`id_klienta` ASC) VISIBLE,
  INDEX `fk_historia_zamowien_zamowienia1_idx` (`id_zamowienia` ASC) VISIBLE,
  CONSTRAINT `fk_historia_zamowien_klienci1`
    FOREIGN KEY (`id_klienta`)
    REFERENCES `mydb`.`projekt_klienci` (`id_klienta`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_historia_zamowien_zamowienia1`
    FOREIGN KEY (`id_zamowienia`)
    REFERENCES `mydb`.`projekt_zamowienia` (`id_zamowienia`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;

-- -----------------------------------------------------
-- Procedury, funkcje i wyzwalacze:

DELIMITER $$
CREATE TRIGGER przenies_do_archiwum AFTER UPDATE ON projekt_zamowienia
FOR EACH ROW
BEGIN 
IF new.id_statusu=5 THEN
INSERT INTO projekt_historia_zamowien VALUES(default,old.id_kupujacego,old.id_zamowienia,'Zakończone');
END IF;
IF new.id_statusu=6 THEN
INSERT INTO projekt_historia_zamowien VALUES(default,old.id_kupujacego,old.id_zamowienia,'Anulowane');
END IF;
END$$
DELIMITER ;

DELIMITER $$
CREATE FUNCTION ilosc_produktow()
RETURNS INT
BEGIN
DECLARE ilosc INT;
SELECT COUNT(*) INTO @ilosc FROM projekt_produkty;
RETURN @ilosc;
END $$ 

DELIMITER $$
CREATE PROCEDURE promocja_na_produkt(IN id_p int)
BEGIN
UPDATE projekt_produkty set cena=cena*0,9 WHERE id_produktu=id_p ;
END $$
DELIMITER ;

DELIMITER $$
CREATE TRIGGER gwarancja_serwisu BEFORE INSERT ON projekt_produkty 
FOR EACH ROW
BEGIN 
IF new.okres_gwarancji IS NULL
THEN
SET new.okres_gwarancji="12 miesięcy(gwarancja serwisu)";
END IF;
END $$
DELIMITER ;
-- -----------------------------------------------------

